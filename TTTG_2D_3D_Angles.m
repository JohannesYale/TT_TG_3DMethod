% Copyright (c) 2023 Johannes Sieberer
% 
% Permission is hereby granted, free of charge, to any person obtaining a copy
% of this software and associated documentation files (the "Software"), to deal
% in the Software without restriction, including without limitation the rights
% to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
% copies of the Software, and to permit persons to whom the Software is
% furnished to do so, subject to the following conditions:
% 
% The above copyright notice and this permission notice shall be included in all
% copies or substantial portions of the Software.
% 
% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
% IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
% FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
% AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
% LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
% OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
% SOFTWARE.

%% Import all contral and patient cases idetnifier from a csv
cases = importCases("CaseList.csv");

%% Iterate through all cases
for n = 1:80

    %% Import data from the data files generated by ScanIP
    data = importfile(strcat("Meausrements/",cases.FileName(n)));

    %% Get Points (x,y,y) from the data object
    [tibLatPostCon,tibMedPostCon,tibMedIterCondTub,tibLatIterCondTub,tibTuber,tibShaftCen,...
    femEpiLat,femEpiMed,femShaftCen,femPostCondLat,femPostCondMed,troch] = importPoints(data);
    results.Case(n) = cases.Identifier;    

    %% Calculate TT-TG
    % Get line shaftcenter to intercondylar midpoint
    tibMidPla = (tibMedIterCondTub + tibLatIterCondTub)/2;
    tibShaftMid = tibMidPla - tibShaftCen; % This is the TLA

    %Get posterior condyle line perpendicular to TLA
    femPostCondLine = femPostCondLat -femPostCondMed;
    femCondLineProj = femPostCondLine - dot(femPostCondLine,tibShaftMid)*tibShaftMid/norm(tibShaftMid)^2;
    femCondLineProjNorm = femCondLineProj / norm(femCondLineProj);

    %3D TT-TG
    tttg = troch - tibTuber; %Line from TT to TG
    results.D3TTTG(n) = abs(dot(femCondLineProjNorm, tttg)/norm(femCondLineProjNorm)); %Project line on posterior condyle line and get length
     
    %2D TT-TG
    femPostCondLineYX = [femPostCondLine(1), femPostCondLine(2), 0]; %Posterior condyle line projected on axial plane
    XYTTTG = [tibTuber(1) - troch(1),tibTuber(2) - troch(2),0];  %Get TT to TG line on axial plane
    results.D2TTTG(n) = dot(femPostCondLineYX, XYTTTG)/norm(femPostCondLineYX); %Project TT to TG line on posterior condyle line and get length

    %% Calculate angles and distances for difference estimate models 

    %Angles for error correction
    tibShaftMidXZ = [tibShaftMid(1), 0, tibShaftMid(3)]; %The TLA projected on coronal plane
    tibShaftMidYZ = [0, tibShaftMid(2), tibShaftMid(3)]; %The TLA projected on sagittal plane
    angleShaftCor = atan2(norm(cross([0,0,1],tibShaftMidXZ)),dot([0,0,1],tibShaftMidXZ))*180/pi; %Angle between axial axis [0,0,1] and coronal TLA
    results.AngleCor (n) = angleShaftCor *sign(femCondLineProjNorm(1)*-sign(tibShaftMidXZ(1))); %Get correct sign for angle (left and right knee, different signs)
    results.AngleSag (n) = atan2(norm(cross([0,0,1],tibShaftMidYZ)),dot([0,0,1],tibShaftMidYZ))*180/pi; %Angle between axial axis [0,0,1] and sagittal TLA
    postCondAngle= atan2(norm(cross([1,0,0],femPostCondLineYX)),dot([1,0,0],femPostCondLineYX))*180/pi; %Get angle posterior condyle line and horizontal line [0,0,1]
    results.AnglePost(n) = postCondAngle * sign(-femPostCondMed(2)+femPostCondLat(2)); 

    %Vertical TT-TG Distance for error estimate
    results.TTTGDistanceZ(n) = norm(troch(3) - tibTuber(3));
end